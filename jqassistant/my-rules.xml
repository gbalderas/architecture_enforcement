<jqa:jqassistant-rules xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                       xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.0"
                       xsi:schemaLocation="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.0 ">

    <constraint id="my-rules:Rule1">
        <description>@A und @B dürfen nicht sein ohne @C</description>
        <cypher><![CDATA[
            MATCH
                (class:Type:Class),
                (class)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(a:Annotation),
                (class)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(b:Annotation),
                (c:Type:Annotation)
            WHERE
                a.fqn="library.annotations.A" AND
                b.fqn="library.annotations.B" AND
                c.fqn="library.annotations.C" AND
                NOT (class)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(c)
            RETURN
                DISTINCT class  AS    Class
        ]]></cypher>
    </constraint>

    <constraint id="my-rules:Rule2">
        <description>@B und @C dürfen nicht sein ohne @A</description>
        <cypher><![CDATA[
             MATCH
                (class:Type:Class),
                (class)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(b:Annotation),
                (class)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(c:Annotation),
                (a:Type:Annotation)
            WHERE
                a.fqn="library.annotations.A" AND
                b.fqn="library.annotations.B" AND
                c.fqn="library.annotations.C" AND
                NOT (class)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(a)
            RETURN
                DISTINCT class  AS    Class
        ]]></cypher>
    </constraint>

    <constraint id="my-rules:Rule3">
        <description>Class @A dürfen @Z nicht haben</description>
        <cypher><![CDATA[
             MATCH
                (class:Type:Class),
                (class)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(a:Annotation),
                (class)-[:DECLARES]->(m:Method)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(z:Type)
            WHERE
                a.fqn="library.annotations.A" AND
                z.fqn="library.annotations.Z"
            RETURN
                DISTINCT class  AS    Class
        ]]></cypher>
    </constraint>

    <constraint id="my-rules:Rule4">
        <description>Class @B dürfen @X @Y nicht haben</description>
        <cypher><![CDATA[
             MATCH
                (class:Type:Class),
                (class)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(b:Annotation),
                (class)-[:DECLARES]->(m:Method)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(anno:Type)
            WHERE
                b.fqn="library.annotations.B" AND
                (anno.fqn="library.annotations.X" OR anno.fqn="library.annotations.Y")
            RETURN
                DISTINCT class  AS    Class
        ]]></cypher>
    </constraint>

    <constraint id="my-rules:Rule5">
        <description>Class @C dürfen @X @Y @Z nicht haben</description>
        <cypher><![CDATA[
             MATCH
                (class:Type:Class),
                (class)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(c:Annotation),
                (class)-[:DECLARES]->(m:Method)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(anno:Type)
            WHERE
                c.fqn="library.annotations.C" AND
                (anno.fqn="library.annotations.X" OR anno.fqn="library.annotations.Y" OR anno.fqn="library.annotations.Z")
            RETURN
                DISTINCT class  AS    Class
        ]]></cypher>
    </constraint>


    <constraint id="my-rules:Attribute">
        <description>Classes should not be have the Attribute with info = "HELLO"</description>
        <cypher><![CDATA[
             MATCH
                (class:Type:Class),
                (class)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(attr:Annotation)
                (c)-[:HAS]->(infoAttribute:Value),
            WHERE
                c.fqn="library.annotations.Attribute" AND
                infoAttribute.info = 'HELLO'
            RETURN
                DISTINCT class  AS    Class
        ]]></cypher>
    </constraint>



    <group id="default">
        <!--<includeConstraint refId="my-rules:Rule1"/>-->
        <!--<includeConstraint refId="my-rules:Rule2"/>-->
        <!--<includeConstraint refId="my-rules:Rule3"/>-->
        <!--<includeConstraint refId="my-rules:Rule4"/>-->
        <!--<includeConstraint refId="my-rules:Rule5"/>-->
        <includeConstraint refID="my-rules:Attribute"></includeConstraint>
    </group>

</jqa:jqassistant-rules>

